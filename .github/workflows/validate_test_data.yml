name: Validate & test data

on:
  workflow_dispatch:

jobs:
  validate_data:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: 'main'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Poetry Cache
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.8.2

      - uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: |
          poetry install

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      - run: poetry install --no-interaction --no-root
        if: steps.cache-dependencies.outputs.cache-hit != 'true'

      - name: Setup DVC
        uses: iterative/setup-dvc@v1
        with:
          version: '3.48.4'

      - name: Setup Dagshub
        run: |
          poetry run dvc remote modify origin endpointurl https://dagshub.com/kristjansuligoj/iis-vaja.s3
          poetry run dvc remote modify origin --local access_key_id ${{ secrets.ACCESS_KEY_ID }}
          poetry run dvc remote modify origin --local secret_access_key ${{ secrets.SECRET_ACCESS_KEY }}

      - name: Pull data
        run: |
          poetry run dvc pull -r origin

      - name: Update current data
        run: |
          cp data/processed/processed_data=DVORANA_TABOR.csv data/current_data.csv

      - name: Validate data
        run: |
          poetry run python src/data/validate_data.py

      - name: Deploy validation output to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "gx/uncommitted/data_docs/local_site"
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}


  test_data:
    needs: validate_data
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: 'main'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Poetry Cache
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.8.2

      - uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: |
          poetry install

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      - run: poetry install --no-interaction --no-root
        if: steps.cache-dependencies.outputs.cache-hit != 'true'

      - name: Setup DVC
        uses: iterative/setup-dvc@v1
        with:
          version: '3.48.4'

      - name: Setup Dagshub
        run: |
          poetry run dvc remote modify origin endpointurl https://dagshub.com/kristjansuligoj/iis-vaja.s3
          poetry run dvc remote modify origin --local access_key_id ${{ secrets.ACCESS_KEY_ID }}
          poetry run dvc remote modify origin --local secret_access_key ${{ secrets.SECRET_ACCESS_KEY }}

      - name: Pull data
        run: |
          poetry run dvc pull -r origin

      - name: Unprotect
        run: |
          poetry run dvc unprotect data

      - name: Update current data
        run: |
          cp data/processed/processed_data=DVORANA_TABOR.csv data/current_data.csv

      - name: Test data
        run: |
          poetry run python src/data/evidently_test_data.py

      - name: Update reference data
        run: |
          cp data/current_data.csv data/reference_data.csv

      - name: Add data to DVC
        run: |
          poetry run dvc add data

      - name: DVC push
        run: |
          poetry run dvc push -r origin

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Update data dvc
