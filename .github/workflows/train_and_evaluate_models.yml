name: Train & evaluate models

on:
  workflow_dispatch:

env:
  DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
  DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
  DAGSHUB_URI: ${{ secrets.DAGSHUB_URI }}
  DAGSHUB_REPO_NAME: ${{ secrets.DAGSHUB_REPO_NAME }}

jobs:
  train_and_evaluate_models:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: 'main'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.5

      - name: Install Poetry Cache
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.8.2

      - uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      - run: poetry install --no-interaction --no-root
        if: steps.cache-dependencies.outputs.cache-hit != 'true'

      - name: Install dependencies
        run: |
          poetry install

      - name: Setup DVC
        uses: iterative/setup-dvc@v1
        with:
          version: '3.48.4'

      - name: Setup Dagshub
        run: |
          poetry run dvc remote modify origin endpointurl https://dagshub.com/kristjansuligoj/iis-vaja.s3
          poetry run dvc remote modify origin --local access_key_id ${{ secrets.ACCESS_KEY_ID }}
          poetry run dvc remote modify origin --local secret_access_key ${{ secrets.SECRET_ACCESS_KEY }}

      - name: Pull data
        run: |
          poetry run dvc pull -r origin

      - name: Train models
        run: |
          poetry run python src/models/train_models.py

      - name: Evaluate models
        run: |
          poetry run python src/models/evaluate_models.py
